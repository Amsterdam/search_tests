
---
- config:
    - testset: "Atlas search app tests"
    - variable_binds: {'headername': 'Content-Type', 'headervalue': 'application/json'}
    - generators:
        - 'woordje': {
                type: 'random_text', min_length: 2,
                max_lenght: 4, character_set: alphanumeric }
        - 'nummer': {
                type: 'random_text', min_length: 1,
                max_lenght: 2, character_set: digits }

- test:
    - name: "typeaheadtest"
    - url: "/typeahead/?q=rozengracht%202"
    - validators:
        - compare: {raw_body:, comparator: "contains", expected: "Rozengracht 2A"}


  #- test:
  #    - name: "typeaheadpostcode"
  #    - url: "/typeahead/?q=1013"
  #    - validators:
  #        - compare: {jsonpath_mini: "0.content.0._display", comparator: "eq", expected: "Adrichemstraat"}

# Rob's tests set

- test:
    - name: "Typeahead Partial street name"
    - url: "/typeahead/?q=linnae"
    - validators:
        - compare: {jsonpath_mini: "0.content.0._display", comparator: "contains", expected: "Linnae"}
          #- compare: {raw_body:, comparator: "regex", expected: "(?!Volkstuinenpark Linnaeus)"}

- test:
    - name: "Typeahead Partial with metro"
    - url: "/typeahead/?q=weesperp"
    - validators:
        - compare: {jsonpath_mini: "0.content.0._display", comparator: "eq", expected: "Weesperplein"}
        - compare: {jsonpath_mini: "0.content.1._display", comparator: "eq", expected: "Metrostation Weesperplein"}

- test:
    - name: "Typeahead Partial Prefix on Later Words"
    - url: "/typeahead/?q=oyeweg"
    - validators:
        - compare: {jsonpath_mini: "0.content.0._display", comparator: "eq", expected: "Baron Schimmelpenninck van der Oyeweg"}

- test:
    - name: "Typeahead full address with ext. dash"
    - url: "/typeahead/?q=Nieuwe%20Leliestraat%20190A-H"
    - validators:
        - compare: {jsonpath_mini: "0.content.0._display", comparator: "eq", expected: "Nieuwe Leliestraat 190A-H"}

- test:
    - name: "Typeahead full address with ext. no space"
    - url: "/typeahead/?q=Nieuwe%20Leliestraat%20190AH"
    - validators:
        - compare: {jsonpath_mini: "0.content.0._display", comparator: "eq", expected: "Nieuwe Leliestraat 190A-H"}

- test:
    - name: "Typeahead full address with ext. space"
    - url: "/typeahead/?q=Nieuwe%20Leliestraat%20190A%20H"
    - validators:
        - compare: {jsonpath_mini: "0.content.0._display", comparator: "eq", expected: "Nieuwe Leliestraat 190A-H"}

- test:
    - name: "Typeahead full address with ext. lower case"
    - url: "/typeahead/?q=nieuwe%20leliestraat%20190A-H"
    - validators:
        - compare: {jsonpath_mini: "0.content.0._display", comparator: "eq", expected: "Nieuwe Leliestraat 190A-H"}

- test:
    - name: "Typeahead postcode search"
    - url: "/typeahead/?q=1092"
    - validators:
        - compare: {jsonpath_mini: "0.content.0._display", comparator: "eq", expected: "'s-Gravesandestraat"}

- test:
    - name: "Typeahead full postcode with space"
    - url: "/typeahead/?q=1092%20CK"
    - validators:
        - compare: {jsonpath_mini: "0.content.0._display", comparator: "eq", expected: "Linnaeusstraat"}

- test:
    - name: "Typeahead full postcode no space"
    - url: "/typeahead/?q=1092CK"
    - validators:
        - compare: {jsonpath_mini: "0.content.0._display", comparator: "eq", expected: "Linnaeusstraat"}


- test:
    - name: "Typeahead full postcode no space lowercase"
    - url: "/typeahead/?q=1092ck"
    - validators:
        - compare: {jsonpath_mini: "0.content.0._display", comparator: "eq", expected: "Linnaeusstraat"}

- test:
    - name: "Typeahead bouwblok"
    - url: "/typeahead/?q=AN30"
    - validators:
        - compare: {raw_body:, comparator: "contains", expected: "AN30"}
